buildscript {
	repositories {
		mavenLocal()
		maven { url "https://repo1.maven.org/maven2" }
	}
	dependencies {
		classpath "org.openapitools:openapi-generator-gradle-plugin:5.0.0"
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
}

apply plugin: 'org.openapi.generator'

group = 'ru.nsu.contactproxy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

openApiGenerate {
	generatorName = "spring"
	inputSpec = "$rootDir/src/main/resources/ContactProxy-ApiDef.yaml".toString()
	outputDir = "$buildDir/generated".toString()
	apiPackage = "ru.nsu.contactproxy.backend.api"
	invokerPackage = "ru.nsu.contactproxy.backend.invoker"
	modelPackage = "ru.nsu.contactproxy.backend.model"
	configOptions = [
			dateLibrary: "java8"
	]
}
